{"mappings":"gfAAAA,EAAA,S,iBA6CA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAM,CAAEF,WAAUC,SACxB,OAAO,IAAIE,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,EAAQF,GAERG,EAAOH,MAhDGM,SAASC,cAAc,SAG/BC,iBAAiB,UAGV,SAAWC,GACxBA,EAAEC,iBAiBmB,IAdI,IAArBC,EAAQC,OAAOH,EAAEI,OAAOd,MAAMe,OAC5BC,EAAOH,OAAOH,EAAEI,OAAOE,KAAKD,OAC9BE,EAASJ,OAAOH,EAAEI,OAAOG,OAAOF,OAY3BG,EAAQ,EAAGA,GAASD,EAAQC,GAAS,EAC5CpB,EAAcoB,EAAON,GAClBO,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,YAAW,WACTC,EAAAC,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,SAC5DA,MAEJ0B,OAAM,SAAAN,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,YAAW,WACTC,EAAAC,OAAOI,QAAQ,sBAAuCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,SAC3DA,MAEPY,GAASI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// знаходимо посилання на форму\nconst formRef = document.querySelector('.form');\n\n// вішаємо слухача на форму\nformRef.addEventListener('submit', onSubmitDataForm);\n\n// фунція при сабміт\nfunction onSubmitDataForm(e) {\n  e.preventDefault();\n\n  // данні які вводить користувач\n  let delay = Number(e.target.delay.value);\n  const step = Number(e.target.step.value);\n  let amount = Number(e.target.amount.value);\n\n  // console.log('deley name =>', e.target.delay);\n  // console.log('deley value =>', e.target.delay.value);\n\n  // console.log('step name =>', e.target.step);\n  // console.log('step value =>', e.target.step.value);\n\n  // console.log('amount name =>', e.target.amount);\n  // console.log('amount value =>', e.target.amount.value);\n\n  // запускаєм цикл по данним\n  for (let index = 1; index <= amount; index += 1) {\n    createPromise(index, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay);\n      });\n    delay += step;\n  }\n}\n\n// cтворення промісу та нового об'єкту який передає проміс\nfunction createPromise(position, delay) {\n  const obj = { position, delay };\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(obj);\n    } else {\n      reject(obj);\n    }\n  });\n}\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","obj","Promise","resolve","reject","Math","random","document","querySelector","addEventListener","e","preventDefault","delay1","Number","target","value","step","amount","index","then","param","setTimeout","$h6c0i","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.1561639f.js.map"}